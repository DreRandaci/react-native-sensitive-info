(self.webpackChunkreact_native_sensitive_info=self.webpackChunkreact_native_sensitive_info||[]).push([[3217],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return d},kt:function(){return k}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),k=i,m=u["".concat(s,".").concat(k)]||u[k]||p[k]||r;return t?a.createElement(m,o(o({ref:n},d),{},{components:t})):a.createElement(m,o({ref:n},d))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},872:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var a=t(4034),i=t(9973),r=(t(7294),t(3905)),o=["components"],l={id:"installation",title:"Installation",sidebar_label:"Installation"},s=void 0,c={unversionedId:"installation",id:"installation",isDocsHomePage:!1,title:"Installation",description:"First of all, install it using npm or yarn",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/react-native-sensitive-info/docs/next/installation",editUrl:"https://github.com/mCodex/react-native-sensitive-info/tree/website/docs/installation.md",version:"current",lastUpdatedBy:"Bartosz Sosnowski",lastUpdatedAt:1604345276,formattedLastUpdatedAt:"11/2/2020",frontMatter:{id:"installation",title:"Installation",sidebar_label:"Installation"},sidebar:"someSidebar",previous:{title:"Overview",permalink:"/react-native-sensitive-info/docs/next/"},next:{title:"Security",permalink:"/react-native-sensitive-info/docs/next/security"}},d=[{value:"Master branch (using Keychain and Android Shared Preferences)",id:"master-branch-using-keychain-and-android-shared-preferences",children:[]},{value:"Keystore branch (using Keychain and Keystore)",id:"keystore-branch-using-keychain-and-keystore",children:[]},{value:"Next (v6.0.0)",id:"next-v600",children:[]},{value:"Linking",id:"linking",children:[{value:"React-Native &gt;= 0.60",id:"react-native--060",children:[]},{value:"React-Native &lt; 0.60",id:"react-native--060-1",children:[]}]}],p={toc:d};function u(e){var n=e.components,t=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"First of all, install it using ",(0,r.kt)("inlineCode",{parentName:"p"},"npm")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn")),(0,r.kt)("h3",{id:"master-branch-using-keychain-and-android-shared-preferences"},"Master branch (using Keychain and Android Shared Preferences)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save react-native-sensitive-info\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add react-native-sensitive-info\n")),(0,r.kt)("h3",{id:"keystore-branch-using-keychain-and-keystore"},"Keystore branch (using Keychain and Keystore)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save git://github.com/mCodex/react-native-sensitive-info#keystore\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add git://github.com/mCodex/react-native-sensitive-info#keystore\n")),(0,r.kt)("h3",{id:"next-v600"},"Next (v6.0.0)"),(0,r.kt)("p",null,"This version includes keystore usage by default. Also, includes many fixes and improvements which were outdated in keystore's branch due to lack of maintenance and only available in master's branch. You can read more ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mCodex/react-native-sensitive-info/releases/tag/v6.0.0"},"here"),". "),(0,r.kt)("p",null,"You can install by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save react-native-sensitive-info@next\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add react-native-sensitive-info@next\n")),(0,r.kt)("h2",{id:"linking"},"Linking"),(0,r.kt)("h3",{id:"react-native--060"},"React-Native >= 0.60"),(0,r.kt)("h4",{id:"ios"},"iOS"),(0,r.kt)("p",null,"Should be automatically linked when you run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pod install\n")),(0,r.kt)("p",null,"Then:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn ios\n")),(0,r.kt)("h4",{id:"android"},"Android"),(0,r.kt)("p",null,"Should be automatically linked when you run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn android\n")),(0,r.kt)("h4",{id:"windows-with-react-native-windows--063"},"Windows with react-native-windows >= 0.63"),(0,r.kt)("p",null,"The C++ module should be automatically linked when you run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"yarn windows\n")),(0,r.kt)("h3",{id:"react-native--060-1"},"React-Native < 0.60"),(0,r.kt)("h4",{id:"ios-1"},"iOS"),(0,r.kt)("h5",{id:"using-cocoapods"},"Using cocoapods"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pod"},"pod 'react-native-sensitive-info', path: \"../node_modules/react-native-sensitive-info\"\n")),(0,r.kt)("h5",{id:"not-using-cocoapods"},"Not using cocoapods?"),(0,r.kt)("p",null,"Go to your XCode, in the project navigator:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Right click Libraries"),(0,r.kt)("li",{parentName:"ul"},"Add Files to ","[your project's name]"),(0,r.kt)("li",{parentName:"ul"},"Go to ",(0,r.kt)("inlineCode",{parentName:"li"},"node_modules/react-native-sensitive-info")),(0,r.kt)("li",{parentName:"ul"},"Add the .xcodeproj file")),(0,r.kt)("p",null,"In XCode, in the project navigator, select your project."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add the libRNSensitiveInfo.a from the RNSensitiveInfo project to your project's Build Phases \u279c Link Binary With Libraries"),(0,r.kt)("li",{parentName:"ul"},"Click .xcodeproj file you added before in the project navigator and go the Build Settings tab. Make sure ",(0,r.kt)("inlineCode",{parentName:"li"},"All")," is toggled on (instead of 'Basic')."),(0,r.kt)("li",{parentName:"ul"},"Look for Header Search Paths and make sure it contains both ",(0,r.kt)("inlineCode",{parentName:"li"},"$(SRCROOT)/../react-native/React")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"$(SRCROOT)/../../React")," - mark both as recursive. (Should be OK by default.)")),(0,r.kt)("h4",{id:"macos"},"MacOS"),(0,r.kt)("p",null,"Same steps as iOS but change the Base SDK to macOS in ",(0,r.kt)("strong",{parentName:"p"},"Libraries/RNSensitiveInfo.xcodeproj"),"."),(0,r.kt)("h4",{id:"android-1"},"Android"),(0,r.kt)("p",null,"Go to ",(0,r.kt)("inlineCode",{parentName:"p"},"settings.gradle")," inside your android project folder and paste this lines there:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"include ':react-native-sensitive-info'\n\nproject(':react-native-sensitive-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-sensitive-info/android')\n")),(0,r.kt)("p",null,"and paste it into build.gradle:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"compile project(':react-native-sensitive-info')\n")),(0,r.kt)("p",null,"In your ",(0,r.kt)("inlineCode",{parentName:"p"},"MainApplication.java")," add:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"import br.com.classapp.RNSensitiveInfo.RNSensitiveInfoPackage; //<- You must import this\n\nprotected List<ReactPackage> getPackages() {\n    return Arrays.<ReactPackage>asList(\n        new MainReactPackage(),\n        new RNSensitiveInfoPackage(), // <- Add this line\n    );\n}\n")),(0,r.kt)("h4",{id:"windows-using-c-on-rnw--062"},"Windows using C++ on RNW >= 0.62"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npm install react-native-sensitive-info --save")),(0,r.kt)("li",{parentName:"ul"},"Open your solution in Visual Studio 2019 (eg. ",(0,r.kt)("inlineCode",{parentName:"li"},"windows\\yourapp.sln"),")"),(0,r.kt)("li",{parentName:"ul"},"Right-click Solution icon in Solution Explorer > Add > Existing Project..."),(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"node_modules\\react-native-sensitive-info\\windows\\RNSensitiveInfoCPP\\RNSensitiveInfoCPP.vcxproj")),(0,r.kt)("li",{parentName:"ul"},"Right-click main application project > Add > Reference..."),(0,r.kt)("li",{parentName:"ul"},"Select ",(0,r.kt)("inlineCode",{parentName:"li"},"RNSensitiveInfoCPP")," in Solution Projects"),(0,r.kt)("li",{parentName:"ul"},"In app ",(0,r.kt)("inlineCode",{parentName:"li"},"pch.h")," add ",(0,r.kt)("inlineCode",{parentName:"li"},'#include "winrt/RNSensitiveInfoCPP.h"')),(0,r.kt)("li",{parentName:"ul"},"In ",(0,r.kt)("inlineCode",{parentName:"li"},"App.cpp")," add ",(0,r.kt)("inlineCode",{parentName:"li"},"PackageProviders().Append(winrt::RNSensitiveInfoCPP::ReactPackageProvider());")," before ",(0,r.kt)("inlineCode",{parentName:"li"},"InitializeComponent();"))),(0,r.kt)("h4",{id:"windows-using-c-on-rnw-061"},"Windows using C++ on RNW 0.61"),(0,r.kt)("p",null,"Do the same steps as for 0.62, but use ",(0,r.kt)("inlineCode",{parentName:"p"},"node_modules\\RNSensitiveInfoCPP\\windows\\RNSensitiveInfoCPP61\\RNSensitiveInfoCPP.vcxproj")," in the 4th step."),(0,r.kt)("h5",{id:"windows-c-module"},"Windows C# Module"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Open the solution in Visual Studio for your Windows apps.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Right click your in the Explorer and click Add > Existing Project....")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Navigate to ",(0,r.kt)("inlineCode",{parentName:"p"},"./node_modules/react-native-sensitive-info/windows/RNSensitiveInfo/RNSensitiveInfo/")," and add RNSensitiveInfo.csproj.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Right click on your React Native Windows app under your solutions directory and click ",(0,r.kt)("inlineCode",{parentName:"p"},"Add > Reference"),"....")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Check the RNSensitiveInfo you just added and press Ok")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Open MainPage.cs in your app"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c#"},"using RNSqlite2;\n\nget\n  {\n      return new List<IReactPackage>\n      {\n          new MainReactPackage(),\n          new RNSensitiveInfoPackage(),\n      };\n  }\n")))}u.isMDXComponent=!0}}]);